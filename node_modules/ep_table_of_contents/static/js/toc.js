$('#tocButton').click(function(){
  $('#toc').toggle();
});

var tableOfContents = {

  enable: function(){
    $('#toc').show().css("width", "350px");
    $('#editorcontainer').css("right", "200px");
    $('#editorcontainer').css("width", "auto");
    this.update()
  },

  disable: function(){
    $('#toc').hide();
    $('#editorcontainer').css("width", "100%");

  },

  // Find Tags
  findTags: function(){
    var toc = {}; // The main object we will use
    var tocL = {}; // A per line record of each TOC item
    var count = 0;
    var delims = ["h1","h2","h3","h4","h5","h6",".h1",".h2",".h3",".h4",".h5",".h6"];
    if(clientVars.plugins.plugins.ep_context){
      if(clientVars.plugins.plugins.ep_context.styles){
        var styles = clientVars.plugins.plugins.ep_context.styles;
        $.each(styles, function(k, style){
          var contextStyle = "context"+style.toLowerCase();
          delims.push(contextStyle);
        });
      }
    }
    delims = delims.join(",");
    var hs = $('iframe[name="ace_outer"]').contents().find('iframe').contents().find("#innerdocbody").children("div").children(delims);
    $(hs).each(function(){
      // Remember lineNumber is -1 what a user sees
      var lineNumber = $(this).parent().prevAll().length;
      var tag = this.nodeName.toLowerCase();
      var newY = $(this).context.offsetTop + "px";
      var linkText = $(this).text(); // get the text for the link
      var focusId = $(this).parent()[0].id; // get the id of the link

      if(tag == "span"){
        tag = $(this).attr("class").replace(/.*(h[1-6]).*/, "$1");
        linkText = linkText.replace(/\s*#*/, '');
      }

      // Create an object of lineNumbers that include the tag
      tocL[lineNumber] = tag;

      // Does the previous line already have this delim?
      // If so do nothing..
      if(tocL[lineNumber-1]){
        if(tocL[lineNumber-1] === tag) return;
      }

      toc[count] = {
        tag : tag,
        y : newY,
        text : linkText,
        focusId : focusId,
        lineNumber : lineNumber
      }
      count++;
    });

    clientVars.plugins.plugins.ep_table_of_context = toc;

    $.each(toc, function(h, v){ // for each item we should display
      var TOCString = "<a title='"+v.text+"' class='tocItem toc"+v.tag+"' data-class='toc"+v.tag+"' onClick=\"tableOfContents.scroll('"+v.y+"');\" data-offset='"+v.y+"'>"+v.text+"</a>";
      $('#tocItems').append(TOCString);
    });

  },
  
  // get HTML
  getPadHTML: function(rep){
    if($('#options-toc').is(':checked')) {
      $('#tocItems').html("");
      tableOfContents.findTags();
    }
  },

  // show the current position
  showPosition: function(rep){
    // We need to know current line # -- see rep
    // And we need to know what section is before this line number
    var toc = clientVars.plugins.plugins.ep_table_of_context;
    if(!toc) return false;
    var repLineNumber = rep.selEnd[0]; // line Number

    // So given a line number of 10 and a toc of [4,8,12] we want to find 8..
    $.each(toc, function(k, line){
      if(repLineNumber >= line.lineNumber){
        // we might be showing this..
        var nextLine = toc[k];
        if(nextLine.lineNumber <= repLineNumber){
          var activeToc = parseInt(k)+1;

          // Seems expensive, we go through each item and remove class
          $('.tocItem').each(function(){
            $(this).removeClass("activeTOC");
          });

          $('.toch'+activeToc).addClass("activeTOC");
        }
      }
    });
  },

  update: function(rep){
    tableOfContents.getPadHTML(rep);
  },

  scroll: function(newY){
    var $outerdoc = $('iframe[name="ace_outer"]').contents().find("#outerdocbody");
    var $outerdocHTML = $outerdoc.parent();
    $outerdoc.animate({scrollTop: newY});
    $outerdocHTML.animate({scrollTop: newY}); // needed for FF
  },

  getParam: function(sname)
  {
    var params = location.search.substr(location.search.indexOf("?")+1);
    var sval = "";
    params = params.split("&");
    // split param and value into individual pieces
    for (var i=0; i<params.length; i++)
    {
      temp = params[i].split("=");
      if ( [temp[0]] == sname ) { sval = temp[1]; }
    }
    return sval;
  }

};

// this is the div switch
$(document).ready(function(){
//hiding tocItems
    $('.CharacterSheet').click(function(){
        $("#tocItems").hide();
		$("#CharacterSheetPlugin").show();
    });
//hiding CharacterSheetPlugin
	$('.PlotPoints').click(function(){
        $("#tocItems").show();
		$("#CharacterSheetPlugin").hide();
    });
	
    });



function addTable() {

//acquiring input from the fields, verifying input from fields
	var myName = document.getElementById("name");
		if( myName.value == null || myName.value == "" ){
			 alert( "Please provide character name!" );
			 return false;
		   }
		   
	var appearance = document.getElementById("appearance");
		if( appearance.value == null || appearance.value == "" ){
			 alert( "Please tell us about the character's appearance!" );
			 return false;
		   }
		   
	var personalityBackstory = document.getElementById("personalityBackstory");
		if( personalityBackstory.value == null || personalityBackstory.value == "" ){
			 alert( "Please tell us about the character's personality/backstory!" );
			 return false;
		   }
		   
	var sex = document.getElementById("sex");
		
    var myTableDiv = document.getElementById("myDynamicTable");
	
	//creating table
	//edit table with css
		var tbl  = document.getElementById("dynaTable");
		tbl.border = "1px solid black";
	  
		var tableBody = document.createElement('TR');{
		tableBody.id = "tableBody"
		tableBody.border = "1px solid black";
	//giving an id to the tableBody id.
		tbl.appendChild(tableBody);
				
			//giving a header which displays the name	
				var tableHead = document.createElement('THEAD');
				tableHead.border = "1px solid black"
				tableBody.appendChild(tableHead);
				tableHead.appendChild(document.createTextNode(myName.value));

			//creating place for image. Create place to edit image.
				
				var tableImg = document.createElement('img');
				tableImg.src = 'https://upload.wikimedia.org/wikipedia/commons/6/6f/Person_icon.png'
				tableBody.appendChild(tableImg);
				tableImg.id = "tableImg"
				
				var editImage = document.createElement('TR');
				tableBody.appendChild(editImage);
				editImage.insertCell(0).innerHTML= '<input type="button" value = "Edit Image" onClick="Javacsript:editImage(this)">';		

			//Creating "Name:" in row1 cell1, value of name in row1cell2, row1cell3 edit button 
				   var tr = document.createElement('TR');
				   tableBody.appendChild(tr);
				   
					   var td = document.createElement('TD');
					   td.width='75';
					   td.appendChild(document.createTextNode("Name:"));
					   tr.appendChild(td)
					   var td2 = document.createElement('TD');
					   td2.width='75';
					   td2.appendChild(document.createTextNode(myName.value));
					   tr.appendChild(td2);

				   
					var tr2 = document.createElement('TR');
					tableBody.appendChild(tr2);
				   
					   var td = document.createElement('TD');
					   td.width='75';
					   td.appendChild(document.createTextNode("Gender:"));
					   tr2.appendChild(td);
					   var td2 = document.createElement('TD');
					   td2.width='75';
					   td2.appendChild(document.createTextNode(sex.value));
					   tr2.appendChild(td2);

					   
					var tr3 = document.createElement('TR');
					tableBody.appendChild(tr3);
				   
					   var td = document.createElement('TD');
					   td.width='75';
					   td.appendChild(document.createTextNode("Appearance:"));
					   tr3.appendChild(td);
					   var td2 = document.createElement('TD');
					   td2.width='75';
					   td2.appendChild(document.createTextNode(appearance.value));
					   tr3.appendChild(td2);
					   
					var tr4 = document.createElement('TR');
					tr4.id = 'tr4'
					tableBody.appendChild(tr4);
				   
					   var td = document.createElement('TD');
					   td.width='75';
					   td.appendChild(document.createTextNode("Personality/Backstory:"));
					   tr4.appendChild(td);
					   var td2 = document.createElement('TD');
					   td2.width='145';
					   td2.appendChild(document.createTextNode(personalityBackstory.value));
					   tr4.appendChild(td2);
					   
								   
				   var trLast = document.createElement('TR');
				   trLast.id = 'trLast'
				   tableBody.appendChild(trLast);
					   trLast.insertCell(0).innerHTML= '<input type="button" value = "Delete Character" onClick="Javacsript:deleteAll(this)">';
					   trLast.insertCell(1).innerHTML= '<input type="button" value = "Edit" onClick="Javacsript:editRow(this)">';
					   trLast.insertCell(1).innerHTML= '<input type="button" value = "Add" onClick="Javacsript:addRow(this)">';
						   
		}
				
				myTableDiv.appendChild(tbl);

			
			
}

//this adds row to the table
//function is a GO
function addRow(link) {
	
//table refers to tableBody
	var table = link.parentNode.parentNode.parentNode;
	var row = document.createElement('TR')
	table.insertBefore(row, table.childNodes[7]);

	var cell1 = row.insertCell(0);
	var cell2 = row.insertCell(1);
	var cell3 = row.insertCell(2);

	// Add some text to the new cells:
	cell1.innerHTML = "NEW Field";
	cell2.innerHTML = "NEW Parameter";
	cell3.innerHTML ='<input type="button" value = "Delete" onClick="Javacsript:deleteRow(this)">';	

}
  
 //this edits row
//function is a GO
 var editRow = function(link) {
	 var row = link.parentNode.parentNode.parentNode;
	 row.contentEditable = true;
 }

 //this deletes all
//function is a GO
function deleteAll(link) {
    var row = link.parentNode.parentNode.parentNode;
	row.outerHTML = "";
    delete row
}

//delete row function here
//function is a GO
function deleteRow(obj) {
      
    var row = obj.parentNode.parentNode;
	row.outerHTML = "";
    delete row
    
}

//this edits image WIP
function editImage(link) {
var newUrl = prompt("Please Give the URL of the new image")
var tableImg = link.parentNode.parentNode.parentNode.childNodes[1]
tableImg.src = newUrl
	}